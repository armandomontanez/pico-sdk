load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

package(default_visibility = ["//visibility:public"])


# PICO_BAZEL_CONFIG: PICO_BARE_METAL, Flag to exclude anything except base headers from the build, type=bool, default=0, group=build
bool_flag(
    name = "PICO_BARE_METAL",
    build_setting_default = False,
)

# PICO_BAZEL_CONFIG: PICO_NO_GC_SECTIONS, Disable -ffunction-sections -fdata-sections and --gc-sections, type=bool, default=0, advanced=true, group=pico_standard_link
bool_flag(
    name = "PICO_NO_GC_SECTIONS",
    build_setting_default = False,
)

# This should always point to a cc_library that provides
# a "pico_config_extra_headers.h".
label_flag(
    name = "pico_config_extra_headers",
    build_setting_default = ":no_extra_headers",
)

# This should always point to a cc_library that provides
# a "pico_config_platform_headers.h".
label_flag(
    name = "pico_config_platform_headers",
    build_setting_default = ":no_platform_headers",
)

# This should always point to a cc_library that defines PICO_CONFIG_HEADER and
# any other defines that should be applied when building the SDK.
label_flag(
    name = "pico_config_header",
    build_setting_default = "//src/boards:default",
)

genrule(
    name = "empty_extra_headers_file",
    outs = ["generated_include/pico_config_extra_headers.h"],
    cmd = "echo > $@",
    cmd_bat = "copy NUL $@",
    visibility = ["//visibility:private"],
)

genrule(
    name = "empty_platform_headers_file",
    outs = ["generated_include/pico_config_platform_headers.h"],
    cmd = "echo > $@",
    cmd_bat = "copy NUL $@",
    visibility = ["//visibility:private"],
)

cc_library(
    name = "no_extra_headers",
    hdrs = ["generated_include/pico_config_extra_headers.h"],
    includes = ["generated_include"],
    visibility = ["//visibility:private"],
)

cc_library(
    name = "no_platform_headers",
    hdrs = ["generated_include/pico_config_platform_headers.h"],
    includes = ["generated_include"],
    visibility = ["//visibility:private"],
)
