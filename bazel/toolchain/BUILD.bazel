load(
    "@pw_toolchain//cc_toolchain:defs.bzl",
    "pw_cc_flag_set",
    "pw_cc_toolchain",
)
load(":pico.bzl", "generate_toolchains")

pw_cc_flag_set(
    name = "warnings",
    actions = [
        "@pw_toolchain//actions:all_c_compiler_actions",
        "@pw_toolchain//actions:all_cpp_compiler_actions",
    ],
    flags = [
        "-Wall",
        "-Wextra",
        # Make all warnings errors, except for the exemptions below.
        "-Werror",
        "-Wno-error=cpp",  # preprocessor #warning statement
        "-Wno-error=deprecated-declarations",  # [[deprecated]] attribute
        "-Wno-psabi",  # Silence the really verbose ARM warnings.
    ],
)

pw_cc_flag_set(
    name = "thumb_abi",
    actions = [
        "@pw_toolchain//actions:all_asm_actions",
        "@pw_toolchain//actions:all_c_compiler_actions",
        "@pw_toolchain//actions:all_cpp_compiler_actions",
        "@pw_toolchain//actions:all_link_actions",
    ],
    flags = [
        "-mabi=aapcs",
        "-mthumb",
    ],
)

pw_cc_flag_set(
    name = "cortex_common",
    actions = [
        "@pw_toolchain//actions:all_c_compiler_actions",
        "@pw_toolchain//actions:all_cpp_compiler_actions",
    ],
    flags = [
        "-ffreestanding",
        "-specs=nano.specs",
        "-specs=nosys.specs",
    ],
)

pw_cc_flag_set(
    name = "cortex_common_link",
    actions = ["@pw_toolchain//actions:all_link_actions"],
    flags = [
        "-Wl,--gc-sections",
        "-specs=nano.specs",
        "-specs=nosys.specs",
        "-lstdc++",
        "-lnosys",
        "-lc",
        "-lm",
        "-Wl,--no-warn-rwx-segment",
    ],
)

pw_cc_flag_set(
    name = "cortex-m0",
    actions = [
        "@pw_toolchain//actions:all_asm_actions",
        "@pw_toolchain//actions:all_c_compiler_actions",
        "@pw_toolchain//actions:all_cpp_compiler_actions",
        "@pw_toolchain//actions:all_link_actions",
    ],
    flags = [
        "-mcpu=cortex-m0",
        "-mfloat-abi=soft",
    ],
)

# TODO: This is a stopgap to get things building.
pw_cc_flag_set(
    name = "pico_sdk_defines",
    actions = [
        "@pw_toolchain//actions:all_compiler_actions",
    ],
    flags = [
        '-DPICO_BOARD=\"rp2040\"',
        "-DPICO_ON_DEVICE=1",
        "-DPICO_NO_HARDWARE=0",
        "-DPICO_BUILD=1",
    ],
)

alias(
    name = "objcopy",
    actual = select({
        "@platforms//os:linux": "@arm_gcc_linux-x86_64//:arm-none-eabi-objcopy_tool",
        "@platforms//os:macos": ":objcopy_mac",
        "@platforms//os:windows": "@arm_gcc_win-x86_64//:arm-none-eabi-objcopy_tool",
        "//conditions:default": None,
    }),
    visibility = ["//visibility:public"]
)

alias(
    name = "objcopy_mac",
    actual = select({
        "@platforms//cpu:aarch64": "@arm_gcc_mac-aarch64//:arm-none-eabi-objcopy_tool",
        "@platforms//cpu:x86_64": "@arm_gcc_mac-x86_64//:arm-none-eabi-objcopy_tool",
    }),
)

generate_toolchains()
