load(
    "@pw_toolchain//cc_toolchain:defs.bzl",
    "pw_cc_flag_set",
    "pw_cc_toolchain",
)
load(":pico.bzl", "generate_toolchains")

pw_cc_flag_set(
    name = "cortex-m0",
    actions = [
        "@pw_toolchain//actions:all_asm_actions",
        "@pw_toolchain//actions:all_c_compiler_actions",
        "@pw_toolchain//actions:all_cpp_compiler_actions",
        "@pw_toolchain//actions:all_link_actions",
    ],
    flags = [
        "-mcpu=cortex-m0plus",
        "-mthumb",
        "-Og",  # TODO: Make this configurable.
    ],
)

alias(
    name = "objcopy",
    actual = select({
        "@platforms//os:linux": "@arm_gcc_linux-x86_64//:arm-none-eabi-objcopy_tool",
        "@platforms//os:macos": ":objcopy_mac",
        "@platforms//os:windows": "@arm_gcc_win-x86_64//:arm-none-eabi-objcopy_tool",
        "//conditions:default": "@platforms//:incompatible",
    }),
    visibility = ["//visibility:public"],
    tags = ["manual"],  # Don't try to build this in wildcard builds.
)

alias(
    name = "objcopy_mac",
    actual = select({
        "@platforms//cpu:aarch64": "@arm_gcc_mac-aarch64//:arm-none-eabi-objcopy_tool",
        "@platforms//cpu:x86_64": "@arm_gcc_mac-x86_64//:arm-none-eabi-objcopy_tool",
        "//conditions:default": "@platforms//:incompatible",
    }),
    tags = ["manual"],  # Don't try to build this in wildcard builds.
)

generate_toolchains()
