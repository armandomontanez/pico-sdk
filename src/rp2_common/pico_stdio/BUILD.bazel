package(default_visibility = ["//visibility:public"])

# This exists to break dependency cycles between
# this library and the stdio implementations.
# Application code should always use :pico_stdio instead.
cc_library(
    name = "pico_stdio_headers",
    includes = ["include"],
    hdrs = [
        "include/pico/stdio.h",
        "include/pico/stdio/driver.h",
    ],
    visibility = [
        "//src/rp2_common/pico_stdio_semihosting:__pkg__",
        "//src/rp2_common/pico_stdio_uart:__pkg__",
        "//src/rp2_common/pico_stdio_usb:__pkg__",
        "//src/rp2_common/tinyusb:__pkg__",
    ],
)

cc_library(
    name = "pico_stdio",
    includes = ["include"],
    hdrs = [
        "include/pico/stdio.h",
        "include/pico/stdio/driver.h",
    ],
    deps = [
        "//src/common/pico_base:pico_base",
        "//src/common/pico_sync:pico_sync",
        "//src/common/pico_time:pico_time",
        "//src/rp2_common/pico_printf:pico_printf",
    ] + select({
        "//bazel/constraint:stdio_semihosting": ["//src/rp2_common/pico_stdio_semihosting:pico_stdio_semihosting"],
        "//bazel/constraint:stdio_uart": ["//src/rp2_common/pico_stdio_uart:pico_stdio_uart"],
        "//bazel/constraint:stdio_usb": ["//src/rp2_common/pico_stdio_usb:pico_stdio_usb"],
    }),
    linkopts = [
        "-Wl,--wrap=printf",
        "-Wl,--wrap=vprintf",
        "-Wl,--wrap=puts",
        "-Wl,--wrap=putchar",
        "-Wl,--wrap=getchar",
    ],
    alwayslink=True,  # Ensures the wrapped symbols are linked in.
    srcs = ["stdio.c"],
)
